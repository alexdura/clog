# Checks for any rules that
# CartesianProjectionWarning(P, i, Q): Field i in predicate P is always a projection of the same field in Q, without any filtering of Q's records.
# FIXME: include the offending rule (is that possible?)




  InputVar($p, $i, v) :- <: ... :- ..., $p(..., $x, ...), ... .:>, INDEX($x, $i), ID($x, v).
  InputVar($p, $i, v) :- <: ... :- ..., NOT($p(..., $x, ...)), ... .:>, INDEX($x, $i), ID($x, v).

  InRHSOfSameRule($p, $p2) :- <: ... :- ..., $p(...), ..., $p2(...), ... . :>.
  InRHSOfSameRule($p, $p2) :- <: ... :- ..., $p(...), ..., NOT($p2(...)), ... . :>.
  InRHSOfSameRule($p, $p2) :- <: ... :- ..., NOT($p(...)), ..., $p2(...), ... . :>.
  InRHSOfSameRule($p, $p2) :- <: ... :- ..., NOT($p(...)), ..., NOT($p2(...)), ... . :>.
  InRHSOfSameRule($p2, $p) :- InRHSOfSameRule($p, $p2).

  InputVarFrom($q, $i, $p, $k, v) :- <: ..., $q(..., $x, ...), ... :- ..., $p(...), ... .:>, INDEX($x, $i), InputVar($p, $k, v), ID($x, v), ID($y, v).

  InputVarsFrom(q, $i, p, $k) :- InputVarFrom($q, $i, $p, $k, v), ID($q, q), ID($p, p).

  OtherInputVars(q, $i, p, $k, p2, $k2) :- InputVarsFrom(q, $i, p, $k), InputVarsFrom(q, $i, p2, $k2), NOT(EQ(p, p2)).
  OtherInputVars(q, $i, p, $k, p2, $k2) :- InputVarsFrom(q, $i, p, $k), InputVarsFrom(q, $i, p2, $k2), NOT(EQ($k, $k2)).
    #  q(..., $i:..., ...) :- ... can be obtained from more than one p(..., $k:..., ...) on the rhs
  MultipleInputVars(q, $i) :- InputVarsFrom(q, $i, p, $k), OtherInputVars(q, $i, p, $k, p2, $k2).

    #  <: q(..., v, ..., v, ...) :- ... . :> holds
  MultipleOccurrencesOfInputVar($q, v) :-
      InputVarFrom($q, $i, $p1, $k1, v),
      InputVarFrom($q, $i2, $p2, $k2, v),
      NOT(EQ($i, $i2)).

  VAL($x) :- INT($x, val).
  VAL($x) :- STR($x, val).
  PredicateIsFiltered($p) :- <: ... :- ..., $p(..., $x, ...), ... . :>, VAL($x).

  MultipleUses($p, v) :- InputVar($p, $i, v), InputVar($p, $j, v), NOT(EQ($i, $j)).
  MultipleUses($p, v) :- InputVar($p, $i, v), InRHSOfSameRule($p, $q), InputVar($q, $j, v), NOT(EQ($p, $q)).

  LiteralHasAVariableWithMultipleUses($p) :- MultipleUses($p, v).

  CartesianProjectionWarning(q, $i, p) :-
      InputVarFrom($q, $i, $p, $k, v),
      NOT(MultipleUses($p, v)),
      NOT(PredicateIsFiltered($p)),
      ID($q, q),
      ID($p, p),
      NOT(MultipleInputVars(q, $i)),
      NOT(MultipleOccurrencesOfInputVar($q, v)).


OUTPUT('CartesianProjectionWarning, "CartesianProjectionWarning.csv", "csv").
