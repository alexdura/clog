	# Constants
	PredType(pred_name, $i, "String") :- <:..., $p(...,$v,...), ... .:>, INDEX($v, $i), ID($p, pred_name), STR($v, x).
	PredType(pred_name, $i, "Int") :- <:..., $p(...,$v,...), ... .:>, INDEX($v, $i), ID($p, pred_name), INT($v, x).
	PredType(pred_name, $i, "PredicateRef") :- <:..., $p(...,$v,...), ... .:>, INDEX($v, $i), ID($p, pred_name), REF($v, x).

	PredType(pred_name, $i, "String") :- <:..., $p(...,$v,...), ... :- ... .:>, INDEX($v, $i), ID($p, pred_name), STR($v, x).
	PredType(pred_name, $i, "Int") :- <:..., $p(...,$v,...), ... :- ... .:>, INDEX($v, $i), ID($p, pred_name), INT($v, x).
	PredType(pred_name, $i, "PredicateRef") :- <:..., $p(...,$v,...), ... :- ... .:>, INDEX($v, $i), ID($p, pred_name), REF($v, x).

	PredType(pred_name, $i, "String") :- <:... :- ..., $p(...,$v,...), ... .:>, INDEX($v, $i), ID($p, pred_name), STR($v, x).
	PredType(pred_name, $i, "Int") :- <:... :- ..., $p(...,$v,...), ... .:>, INDEX($v, $i), ID($p, pred_name), INT($v, x).
	PredType(pred_name, $i, "PredicateRef") :- <:... :- ..., $p(...,$v,...), ... .:>, INDEX($v, $i), ID($p, pred_name), REF($v, x).

	# Type transfer
	# between two predicates in the body
	PredType(q_name, $j, t) :-  <:... :- ..., $p(...,$v,...), ... , $q(...,$w, ...), ... . :>, INDEX($v, $i), INDEX($w, $j),
	                        ID($p, p_name), ID($q, q_name), ID($v, v_name), ID($w, w_name), EQ(v_name, w_name),
				PredType(p_name, $i, t).

	PredType(p_name, $i, t) :-  <:... :- ... , $p(...,$v,...), ... , $q(...,$w, ...), ... . :>, INDEX($v, $i), INDEX($w, $j),
	                        ID($p, p_name), ID($q, q_name), ID($v, v_name), ID($w, w_name), EQ(v_name, w_name),
				PredType(q_name, $j, t).

	# head -> body
	PredType(q_name, $j, t) :-  <:..., $p(...,$v,...), ... :- ... ,$q(...,$w, ...), ... . :>, INDEX($v, $i), INDEX($w, $j),
	                        ID($p, p_name), ID($q, q_name), ID($v, v_name), ID($w, w_name), EQ(v_name, w_name),
				PredType(p_name, $i, t).
	# body -> head
	PredType(p_name, $i, t) :-  <:..., $p(...,$v,...), ... :- ... ,$q(...,$w, ...), ... . :>, INDEX($v, $i), INDEX($w, $j),
	                        ID($p, p_name), ID($q, q_name), ID($v, v_name), ID($w, w_name), EQ(v_name, w_name),
				PredType(q_name, $j, t).

	InconsistentTyped(p_name, i) :- PredType(p_name, i, t1), PredType(p_name, i, t2), NEQ(t1, t2).

	TermIndex(pred_name, $i) :- <:..., $p(...,$v,...), ... .:>, INDEX($v, $i), ID($p, pred_name).
	TermIndex(pred_name, $i) :- <:..., $p(...,$v,...), ... :- ... .:>, INDEX($v, $i), ID($p, pred_name).
	TermIndex(pred_name, $i) :- <:... :- ..., $p(...,$v,...), ... .:>, INDEX($v, $i), ID($p, pred_name).

	IsTyped(p_name, i) :- PredType(p_name, i, x).
	IncompleteTyped(p_name, i) :- TermIndex(p_name, i), NOT(IsTyped(p_name, i)).


OUTPUT('PredType, "PredType.csv", "csv").
OUTPUT('InconsistentTyped, "InconsistentTyped.csv", "csv").
OUTPUT('IncompleteTyped, "IncompleteTyped.csv", "csv").